<%

log = new Log(),
        usageClient = jagg.module("manager").getUsageClient(),
        user = jagg.getUser();
var gson = com.google.gson.Gson();
var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;

function isDataPublishingEnabled(providerName, server) {
    var usage = [];
    var usageout = [];
    try {
        usage = org.wso2.carbon.apimgt.usage.client.UsageClient.isDataPublishingEnabled();
        if (log.isDebugEnabled()) {
            log.debug("isDataPublishingEnabled check");
        }
        if (usage == null) {
            return {
                error:true
            };

        } else {

            return {
                error:false,
                usage:usage
            };
        }
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            usage:null

        };
    }
}

var getDataFromTable = function (tableName, tenantDomain, startIndex,count, sortableColumn,isAscending) {

    if (tableName == "ApimAllAlert") {

        var appName = "APIM_ABNORMAL_REQUEST_PATTERN"; //call any alert app since it has a definition to all alert table
        var query = "from ApimAllAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT type, tenantDomain, message, severity, alertTimestamp " +
                        "having tenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "type": record[0],
                                 "tenantDomain" : record[1],
                                 "msg" : record[2],
                                 "severity":record[3],                       
                                 "alertTimestamp":record[4]
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if(tableName == "ApimRequestPatternChangedAlert") {

        var appName = "APIM_ABNORMAL_REQUEST_PATTERN";
        var query = "from ApimRequestPatternChangedAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT username, applicationName, applicationOwner, tenantDomain, message, severity, alertTimestamp " +
                        "having tenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "userId": record[0],
                                 "applicationName" : record[1],
                                 "applicationOwner" : record[2],
                                 "tenantDomain":record[3],                       
                                 "msg":record[4],
                                 "severity":record[5],
                                 "alertTimestamp":record[6],
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if (tableName == "ApimTierLimitHittingAlert") {

        var appName = "APIM_FREQUENT_TIER_LIMIT_HITTING_ALERT";
        var query = "from ApimTierLimitHittingAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT subscriber, apiCreator, apiName, applicationId, applicationName, apiCreatorTenantDomain, userTenantDomain, message, severity, alertTimestamp " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "subscriber": record[0],
                                 "apiPublisher" : record[1],
                                 "api" : record[2],
                                 "applicationId" : record[3],
                                 "applicationName": record[4],   
                                 "apiCreatorTenantDomain":record[5],
                                 "userTenantDomain" : record[6],                   
                                 "msg": record[7],
                                 "severity": record[8],
                                 "alertTimestamp": record[9] 
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if (tableName == "ApimIPAccessAbnormalityAlert") {

        var appName = "APIM_UNUSUAL_IP_ACCESS_ALERT";
        var query = "from ApimIPAccessAbnormalityAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT type, message, severity, ip, applicationName, applicationOwner, username, tenantDomain, requestTimestamp, alertTimestamp " +
                        "having tenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "msg": record[1],
                                 "severity": record[2],
                                 "alertTimestamp": record[8] ,
                                 "ip" : record[3],
                                 "applicationName": record[4],   
                                 "applicationOwner" : record[5],
                                 "userId": record[6]              

                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if (tableName == "ApimAbnormalRequestsPerMinAlert") { 

        var appName = "APIM_ABNORMAL_REQUEST_COUNT";
        var query = "from ApimAbnormalRequestsPerMinAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT applicationName, applicationOwner, tenantDomain, apiName, apiVersion, requestCountPerMin, thresholdRequestCountPerMin, message, severity, alertTimestamp " +
                        "having tenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "applicationName": record[0],   
                                 "applicationOwner" : record[1],
                                 "api" : record[3],
                                 "api_version" : record[4],
                                 "msg": record[7],
                                 "severity": record[8],
                                 "alertTimestamp": record[9] 
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if(tableName == "ApimAbnormalResponseTimeAlert") {

        var appName = "APIM_ABNORMAL_RESPONSE_TIME";
        var query = "from ApimAbnormalResponseTimeAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT apiName, apiVersion, apiCreator, apiCreatorTenantDomain, apiResourceTemplate, apiMethod, responseTime, thresholdResponseTime, message, severity, alertTimestamp " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";
                        
        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "api" : record[0],
                                 "api_version" : record[1],
                                 "apiPublisher" : record[2],
                                 "resourceTemplate" : record[4],
                                 "method" : record[5],                     
                                 "msg":record[8],
                                 "severity":record[9],
                                 "alertTimestamp":record[10],
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if(tableName == "ApimApiHealthMonitorAlert") {

        var appName = "APIM_HEALTH_AVAILABILITY_ALERT";
        var query = "from ApimApiHealthMonitorAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT apiName, apiVersion, apiCreator, apiCreatorTenantDomain, message, severity, alertTimestamp " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";
                        
        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "api" : record[0],
                                 "api_version" : record[1],
                                 "apiPublisher" : record[2],                   
                                 "msg":record[4],
                                 "severity":record[5],
                                 "alertTimestamp":record[6]
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if(tableName == "ApimAbnormalBackendTimeAlert") {

        var appName = "APIM_ABNORMAL_BACKEND_TIME";
        var query = "from ApimAbnormalBackendTimeAlert " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT apiName, apiVersion, apiCreator, apiCreatorTenantDomain, apiResourceTemplate, apiMethod, backendTime, thresholdBackendTime, message, severity, alertTimestamp " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";
                        
        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "api" : record[0],
                                 "api_version" : record[1],
                                 "apiPublisher" : record[2],   
                                 "resourceTemplate" : record[4],
                                 "method" : record[5],                  
                                 "msg":record[8],
                                 "severity":record[9],
                                 "alertTimestamp":record[10]
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    } else if(tableName == "ApimApiAvailabilityInfo") {

        var appName = "APIM_HEALTH_AVAILABILITY_ALERT";
        var query = "from ApimApiAvailabilityInfo " +
                        "SELECT * " +  // use the commented select query below once https://github.com/wso2/product-sp/issues/753 fixed
                        //"SELECT apiName, apiVersion, apiCreator, tenantDomain, status " +
                        "having tenantDomain=='" + tenantDomain + "' " + 
                        "order by " + sortableColumn + " " + isAscending + " " + 
                        "limit " + count + " offset " + startIndex + " ;";
                        
        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            if(parsedDataResult.records != null) {              
              var items = parsedDataResult.records;
              for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj =  {  
                              "values":{  
                                 "api" : record[0],
                                 "api_version" : record[1],
                                 "apiPublisher" : record[2],
                                 "status" : record[4]                             
                                 }
                              }
                    objArr.push(obj);
              }
              
            }
        }
        return objArr;

    }

};

var getCountFromTable = function (tableName, tenantDomain) {

    var appName;
    var query;

    if (tableName == "ApimAllAlert") {

        appName = "APIM_ABNORMAL_REQUEST_PATTERN"; //call any alert app since it has a definition to all alert table
        query = "from ApimAllAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having tenantDomain=='" + tenantDomain + "' ;" 

    } else if(tableName == "ApimRequestPatternChangedAlert") {

        appName = "APIM_ABNORMAL_REQUEST_PATTERN";
        query = "from ApimRequestPatternChangedAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having tenantDomain=='" + tenantDomain + "' ;" 

    } else if (tableName == "ApimTierLimitHittingAlert") {

        appName = "APIM_FREQUENT_TIER_LIMIT_HITTING_ALERT";
        query = "from ApimTierLimitHittingAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' ;" 

    } else if (tableName == "ApimIPAccessAbnormalityAlert") {

        appName = "APIM_UNUSUAL_IP_ACCESS_ALERT";
        query = "from ApimIPAccessAbnormalityAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having tenantDomain=='" + tenantDomain + "' ;"

    } else if (tableName == "ApimAbnormalRequestsPerMinAlert") { 

        appName = "APIM_ABNORMAL_REQUEST_COUNT";
        query = "from ApimAbnormalRequestsPerMinAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having tenantDomain=='" + tenantDomain + "' ;" 

    } else if(tableName == "ApimAbnormalResponseTimeAlert") {

        appName = "APIM_ABNORMAL_RESPONSE_TIME";
        query = "from ApimAbnormalResponseTimeAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' ;"                  

    } else if(tableName == "ApimApiHealthMonitorAlert") {

        appName = "APIM_HEALTH_AVAILABILITY_ALERT";
        query = "from ApimApiHealthMonitorAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' ;" 

    } else if(tableName == "ApimAbnormalBackendTimeAlert") {

        appName = "APIM_ABNORMAL_BACKEND_TIME";
        query = "from ApimAbnormalBackendTimeAlert " +
                        "SELECT count(alertTimestamp) as count " +
                        "having apiCreatorTenantDomain=='" + tenantDomain + "' ;" 

    } else if(tableName == "ApimAbnormalBackendTimeAlert") {
        appName = "APIM_HEALTH_AVAILABILITY_ALERT";
        query = "from ApimApiAvailabilityInfo " +
                        "SELECT count(apiName) as count " +
                        "having tenantDomain=='" + tenantDomain + "' ;" 
    }
    var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
    var totalCount = 0;
    if (result != null ) {
        var parsedDataResult = JSON.parse(result);
        if(parsedDataResult.records != null && parsedDataResult.records[0] != null) {    
           totalCount = parsedDataResult.records[0]
        }
    }
    return totalCount;

};



%>
